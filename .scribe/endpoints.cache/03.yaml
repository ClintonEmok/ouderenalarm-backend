## Autogenerated by Scribe. DO NOT MODIFY.

name: Notes
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user/notes
    metadata:
      groupName: Notes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get notes for the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Notes retrieved successfully.",
            "count": 1,
            "data": [
              {
                "id": 1,
                "type": "medical",
                "content": "Feeling better.",
                "author_id": 5,
                "noteable_id": 5,
                "noteable_type": "App\\Models\\User",
                "created_at": "2025-05-19T12:00:00Z",
                "updated_at": "2025-05-19T12:00:00Z"
              }
            ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bDZ18566fcPkE4V3ahvedga'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/notes
    metadata:
      groupName: Notes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new note for the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: false
        example: medical
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: 'I feel dizzy today.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      anonymous:
        name: anonymous
        description: optional
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: medical
      content: 'I feel dizzy today.'
      anonymous: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": "success",
            "message": "Note created successfully.",
            "data": { "id": 2, "type": "medical", "content": "I feel dizzy today.", ... }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a58fb6v4hdecVDaZ31EgkP6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/notes/{note_id}'
    metadata:
      groupName: Notes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing note of the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      note_id:
        name: note_id
        description: 'The ID of the note.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note:
        name: note
        description: 'The ID of the note.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      note_id: 1
      note: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: false
        example: general
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: 'Updated note content.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: general
      content: 'Updated note content.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Note updated successfully.",
            "data": { "id": 5, "type": "general", "content": "Updated note content.", ... }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dgb6PZ18he4cEva3fkV5ad6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/notes/{note_id}'
    metadata:
      groupName: Notes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a note owned by the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      note_id:
        name: note_id
        description: 'The ID of the note.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note:
        name: note
        description: 'The ID of the note.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      note_id: 14
      note: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": "success",
            "message": "Note deleted successfully."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer khP63f6cevDa8Z1g4dV5bEa'
    controller: null
    method: null
    route: null
    custom: []
